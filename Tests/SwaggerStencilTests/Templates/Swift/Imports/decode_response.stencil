{% macro firstResponseTypeHelper response %}
{% if response.schema.some %}
{{ response.schema|schemaType:"swift" }}
{% else %}
Void
{% endif %}
{% endmacro %}

{% macro firstResponseType operation %}
{% set contents %}
{% for code,either in operation.responses %}
{% if either.a %}
{% call firstResponseTypeHelper either.a %}
{% else %}
{% call firstResponseTypeHelper either.b.structure %}
{% endif %}
{% endfor %}
{% endset %}
{{ contents|removeNewlines }}
{% endmacro %}

{% macro decodeResponseHelper2 response schema %}
                guard let data = data else {
                    throw ClientError.noData
                }

{% if schema.type.structure or schema.type.array or schema|isType:"boolean" %}
                return try JSONDecoder().decode({{ response.schema|schemaType:"swift" }}.self, from: data)
{% elif schema.type.string %}
                guard let string = String(data: data, encoding: .utf8) else {
                    throw ClientError.badString
                }

                return string
{% endif %}
{% endmacro %}

{% macro decodeResponseHelper response %}
{% if response.schema.some %}
{% call decodeResponseHelper2 response response.schema%}
{% else %}
                return
{% endif %}
{% endmacro %}

{% macro decodeResponse either %}
{% if either.a %}
{% call decodeResponseHelper either.a %}
{% else %}
{% call decodeResponseHelper either.b.structure %}
{% endif %}
{% endmacro %}

{% macro decodeErrorHelper response %}
                guard let data = data else {
                    throw ClientError.noData
                }

                throw try JSONDecoder().decode({{ response.schema|schemaType:"swift" }}.self, from: data)
{% endmacro %}

{% macro decodeError either %}
{% if either.a %}
{% call decodeErrorHelper either.a %}
{% else %}
{% call decodeErrorHelper either.b.structure %}
{% endif %}
{% endmacro %}
